<?php

/*
 * This file is part of Contao.
 *
 * Copyright (c) 2005-2015 Leo Feyer
 *
 * @license LGPL-3.0+
 */

namespace Contao\CoreBundle\Image;

use Imagine\Image\BoxInterface;
use Imagine\Image\PointInterface;

/**
 * Resize coordinates generated by the ResizeCalculator
 *
 * @author Martin AuswÃ¶ger <martin@auswoeger.com>
 */
class ResizeCoordinates
{
    /**
     * @var BoxInterface
     */
    private $size;

    /**
     * @var PointInterface
     */
    private $cropStart;

    /**
     * @var BoxInterface
     */
    private $cropSize;

    /**
     * Constructor.
     *
     * @param BoxInterface   $size      The target size
     * @param PointInterface $cropStart The crop start coordinate
     * @param BoxInterface   $cropSize  The crop size
     */
    public function __construct(
        BoxInterface $size,
        PointInterface $cropStart,
        BoxInterface $cropSize
    ) {
        $this->size = $size;
        $this->cropStart = $cropStart;
        $this->cropSize = $cropSize;
    }

    /**
     * Gets the size.
     *
     * @return BoxInterface
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Gets the crop start coordinate.
     *
     * @return PointInterface
     */
    public function getCropStart()
    {
        return $this->cropStart;
    }

    /**
     * Gets the crop size.
     *
     * @return BoxInterface
     */
    public function getCropSize()
    {
        return $this->cropSize;
    }

    /**
     * String representation of the coordinates.
     *
     * @return string
     */
    public function __toString()
    {
        return $this->size->getWidth() . 'x' . $this->size->getHeight() .
            ',' . $this->cropStart->getX() . 'x' . $this->cropStart->getY() .
            ',' . $this->cropSize->getWidth() . 'x' . $this->cropSize->getHeight();
    }
}
